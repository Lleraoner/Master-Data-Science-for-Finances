"0","ruta <- 'tterreno.sav'"
"0","coches <- read.spss(ruta, to.data.frame = T)"
"2","re-encoding from CP1252
"
"0","coches <- data.frame(coches[,-1], row.names = make.names(coches[,1], unique = T))"
"0","coches_sin_escalar = read.spss(ruta, to.data.frame = T)"
"2","re-encoding from CP1252
"
"0","coches_sin_escalar <- data.frame(coches_sin_escalar[,-1], row.names = make.names(coches_sin_escalar[,1], unique = T))"
"0","coches[116, 11] <- mean(coches[c(119, 120, 118, 121, 117), 11])"
"0","coches[116, 11]"
"1","[1]"
"1"," 12.22"
"1","
"
"0","coches[c(75:79), 11] <- mean(coches[c(63:74), 11])"
"0","coches[19, 11] <- mean(coches[c(13:18, 19:22), 11])"
"0","coches[c(105, 106), 12] <- 144"
"0","coches[114, 12] <- 135"
"0","coches_sin_escalar[116, 11] <- mean(coches_sin_escalar[c(119, 120, 118, 121, 117), 11])"
"0","coches_sin_escalar[116, 11]"
"1","[1]"
"1"," 12.22"
"1","
"
"0","coches_sin_escalar[c(75:79), 11] <- mean(coches_sin_escalar[c(63:74), 11])"
"0","coches_sin_escalar[19, 11] <- mean(coches_sin_escalar[c(13:18, 19:22), 11])"
"0","coches_sin_escalar[c(105, 106), 12] <- 144"
"0","coches_sin_escalar[114, 12] <- 135"
"0","coches_sin_escalar[c(7, 8), 3] <- mean(coches_sin_escalar[c(6, 9:12), 3])"
"2","argument is not numeric or logical: returning NA"
"0","coches_sin_escalar[c(7, 8), 3]"
"1","[1]"
"1"," <NA>"
"1"," <NA>"
"1","
"
"1","Levels: "
"1","4 6 8"
"1","
"
"0","coches_sin_escalar[19, 4] <- mean(coches_sin_escalar[c(13:18, 20:22), 4])"
"0","anyNA(coches_sin_escalar)"
"1","[1]"
"1"," TRUE"
"1","
"
"0","perfomScaling <-  T"
"0","if(perfomScaling){"
"0","  for(i in names(coches)){"
"0","    if(class(coches[,i ]) == 'integer' | class(coches[,i ]) == 'numeric'){"
"0","      coches[,i ] = scale(coches[,i ])"
"0","    }"
"0","  }"
"0","}"
"0","#Creamos un nuevo dataframe, con las columnas buenas."
"0","columnasnum <- c('potencia','rpm','peso','consurb','velocida')"
"0","cnum <- c('potencia','rpm','peso','consurb','velocida', 'cons120')"
"0","cochesescalados <- subset(coches, select = columnasnum)"
"0","cochesescalados2 <- subset(coches, select = cnum)"
"0","coches_sub_sin_escalar = subset(coches_sin_escalar, select = columnasnum)"
"0","sum(is.na(coches_sub_sin_escalar))"
"1","[1]"
"1"," 3"
"1","
"
"0","coches_sub_sin_escalar[c(7, 8), 3] = 1850"
"0","coches_sub_sin_escalar[19, 4] <- mean(coches_sub_sin_escalar[c(13:18, 20:22), 4])"
"0","anyNA(coches_sub_sin_escalar)"
"1","[1]"
"1"," FALSE"
"1","
"
"0","#Peso"
"0","cochesescalados[c(7, 8), 3] <- mean(cochesescalados[c(6, 9:12), 3])"
"0","cochesescalados[c(7, 8), 3]"
"1","    "
"1","      [,1]"
"1","
[1,]"
"1"," 0.6158922"
"1","
[2,]"
"1"," 0.6158922"
"1","
"
"0","cochesescalados[19, 4] <- mean(cochesescalados[c(13:18, 20:22), 4])"
"0","#Matriz de distancias"
"0","#Obtenemos las distancias del anterior DF a travÃ©s de Pearson"
"0","qdist <- get_dist(cochesescalados, stand = T, method = 'pearson')"
"0","qdist.manhattan <- get_dist(cochesescalados, stand = T, method = 'manhattan')"
"0","qdist.mink <- get_dist(cochesescalados, stand = T, method = 'minkowski')"
