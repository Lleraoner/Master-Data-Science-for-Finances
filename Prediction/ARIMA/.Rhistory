library(lmtest)
lmtest
library(lmtest)
coeftest(crest.arimax)
coeftest(colgate.arimax)
coeftest(crest.arimax)
coeftest(colgate.arimax)
crest.arimax = arimax(oVentasCrest, order = c(0, 1, 1),
xtransf = data.frame(primero = 1*(seq(oVentasCrest) >= 135)),
xreg = data.frame(error136 = 1*(seq(oVentasCrest) == 136),
error138 = 1*(seq(oVentasCrest) == 138)),
transfer = list(c(0,0)),
method = 'ML')#Maxima verosimilitud
colgate.arimax = arimax(oVentasColgate, order = c(0, 1, 1),
xtransf = data.frame(first = 1*(seq(oVentasColgate) >= 135)
),
transfer = list(c(0,0)),
method = 'ML')#Maxima verosimilitud
crest.arimax = arimax(oVentasCrest, order = c(0, 1, 1),
xtransf = data.frame(primero = 1*(seq(oVentasCrest) >= 135)),
xreg = data.frame(error136 = 1*(seq(oVentasCrest) == 136),
error138 = 1*(seq(oVentasCrest) == 138)),
transfer = list(c(0,0)),
method = 'ML')#Maxima verosimilitud
colgate.arimax = arimax(oVentasColgate, order = c(0, 1, 1),
xtransf = data.frame(first = 1*(seq(oVentasColgate) >= 135)
),
transfer = list(c(0,0)),
method = 'ML')#Maxima verosimilitud
coeftest(crest.arimax)
coeftest(colgate.arimax)
library(astsa)
library(Hmisc)
crest_134 <- window(cuotaCrest, end=134) #ventas, nos quedamos con los 134 primeros porque a partir del 135 la cosa cambia
colgate_134 <- window(cuotaColgate, end=134) #lead es publicidad, 140 primeros
crest_134_D <- diff(crest_134) # para hacerlas estacionarias usamos diff
colgate_134_D <- diff(colgate_134) # quitarle la media es indiferente, con usar diff sobra
library(dynlm) #regresion dinamica
install.packages('astsa')
install.packages('Hmisc')
install.packages('dynlm')
crest.arimax = arimax(oVentasCrest, order = c(0, 1, 1),
xtransf = data.frame(primero = 1*(seq(oVentasCrest) >= 135)),
xreg = data.frame(error136 = 1*(seq(oVentasCrest) == 136),
error138 = 1*(seq(oVentasCrest) == 138)),
transfer = list(c(0,0)),
method = 'ML')#Maxima verosimilitud
colgate.arimax = arimax(oVentasColgate, order = c(0, 1, 1),
xtransf = data.frame(first = 1*(seq(oVentasColgate) >= 135)
),
transfer = list(c(0,0)),
method = 'ML')#Maxima verosimilitud
coeftest(crest.arimax)
coeftest(colgate.arimax)
```{r,include=T,echo=T}
coeftest(crest.arimax)
coeftest(colgate.arimax)
library(openxlsx)
library(forecast)
library(xts)
library(ggplot2)
library(ggfortify) #Plot Monthplot
library(TSA)
library(lmtest)
library(astsa)
library(Hmisc)
set.seed(123)
datosCompletos <- read.xlsx('data.xlsx', colNames = T)
str(datosCompletos)
## Análisis Exploratorio de Datos ##
#Dado que el fichero inicial no tiene NA's los demás tampoco los tendrán
sum(is.na(datosCompletos))
#Todas son variables de tipo numerico
#Tendremos que trabajar la columna de la fecha y las semanas
cuotaCrest <- datosCompletos$Crest
cuotaColgate <- datosCompletos$Colgate
generateDate <- seq(as.Date('1958/01/08'), as.Date('1963/04/23'), by = 'week')
xCuotaCrest <- xts(cuotaCrest, order.by = generateDate)
xCuotaColgate <- xts(cuotaColgate, order.by = generateDate)
#Vamos a pasarlo a trimestre para operar mejor
xCuotaCrest <- to.weekly(xCuotaCrest)
zCuotaCrest <- as.zoo(xCuotaCrest$xCuotaCrest.Close)
xCuotaColgate <- to.weekly(xCuotaColgate)
zCuotaColgate <- as.zoo(xCuotaColgate$xCuotaColgate.Close)
names(zCuotaCrest) <- 'CuotaMercado'
names(zCuotaColgate) <- 'CuotaMercado'
#Este es el claro ejemplo de un filtro doble
air.m3=arimax(log(airmiles),order=c(0,1,1),
seasonal=list(order=c(0,1,1),period=12),
xtransf=data.frame(I911=1*(seq(airmiles)==69),
I911=1*(seq(airmiles)==69)),
transfer=list(c(0,0),c(1,0)), #este filtro es adecuado (numerador orden cero y denominador de orden 1)
io=c(25,81, 84), #introducimos los errores innovativos (si hay errores ao los introducimos ao=c(...))
method='ML')
crest.arimax = arimax(oVentasCrest, order = c(0, 1, 1),
xtransf = data.frame(primero = 1*(seq(oVentasCrest) >= 135)),
xreg = data.frame(error136 = 1*(seq(oVentasCrest) == 136),
error138 = 1*(seq(oVentasCrest) == 138)),
transfer = list(c(0,0)),
method = 'ML')#Maxima verosimilitud
colgate.arimax = arimax(oVentasColgate, order = c(0, 1, 1),
xtransf = data.frame(first = 1*(seq(oVentasColgate) >= 135)
),
transfer = list(c(0,0)),
method = 'ML')#Maxima verosimilitud
#Este es el claro ejemplo de un filtro doble
air.m3=arimax(log(airmiles),order=c(0,1,1),
seasonal=list(order=c(0,1,1),period=12),
xtransf=data.frame(I911=1*(seq(airmiles)==69),
I911=1*(seq(airmiles)==69)),
transfer=list(c(0,0),c(1,0)), #este filtro es adecuado (numerador orden cero y denominador de orden 1)
io=c(25,81, 84), #introducimos los errores innovativos (si hay errores ao los introducimos ao=c(...))
method='ML')
plot(fventas.colgate)
fventas.crest = forecast(arima.crest, h = 16)
plot(fventas.crest)
fventas.colgate = forecast(arima.colgate, h = 16)
plot(fventas.colgate)
fventas.crest = forecast(arima.crest, h = 16)
plot(fventas.crest)
fventas.colgate = forecast(arima.colgate, h = 16)
plot(fventas.colgate)
#el mejor modelo es un 011 sin estacionalidad
#auto arima no da estacionalidad, tenemos que ponerla nosotros
#Se debe al tipo de modelo de negocio. Una electrica por ejemplo depende mucho del mes en el que estemos
#El consumo de pasta no va a cambiar durante las epocas del año, por tanto al no tener estaciones no hay estacionalidad
#Ese comonente habria que agregarlo en la funcion arima no en la auto arima.
arima.crest = auto.arima(oVentasCrest)
summary(arima.crest)
arima.colgate <- auto.arima(oVentasColgate)
summary(arima.colgate)
#Podemos usar coredata para que ignore el indice en un objeto Zoo
#cuando hay estacionalidad hay que incluir un period
arimabueno = arima(oVentasCrest, order = c(0,1,1))
crest.arimax = arimax(oVentasCrest, order = c(0, 1, 1),
xtransf = data.frame(primero = 1*(seq(oVentasCrest) >= 135)),
xreg = data.frame(error136 = 1*(seq(oVentasCrest) == 136),
error138 = 1*(seq(oVentasCrest) == 138)),
transfer = list(c(0,0)),
method = 'ML')#Maxima verosimilitud
colgate.arimax = arimax(oVentasColgate, order = c(0, 1, 1),
xtransf = data.frame(first = 1*(seq(oVentasColgate) >= 135)
),
transfer = list(c(0,0)),
method = 'ML')#Maxima verosimilitud
coeftest(crest.arimax)
coeftest(colgate.arimax)
library(openxlsx)
library(forecast)
library(xts)
library(ggplot2)
library(ggfortify) #Plot Monthplot
library(TSA)
library(lmtest)
library(astsa)
library(Hmisc)
set.seed(123)
datosCompletos <- read.xlsx('data.xlsx', colNames = T)
str(datosCompletos)
## Análisis Exploratorio de Datos ##
#Dado que el fichero inicial no tiene NA's los demás tampoco los tendrán
sum(is.na(datosCompletos))
#Todas son variables de tipo numerico
#Tendremos que trabajar la columna de la fecha y las semanas
cuotaCrest <- datosCompletos$Crest
cuotaColgate <- datosCompletos$Colgate
generateDate <- seq(as.Date('1958/01/08'), as.Date('1963/04/23'), by = 'week')
xCuotaCrest <- xts(cuotaCrest, order.by = generateDate)
xCuotaColgate <- xts(cuotaColgate, order.by = generateDate)
#Vamos a pasarlo a trimestre para operar mejor
xCuotaCrest <- to.weekly(xCuotaCrest)
zCuotaCrest <- as.zoo(xCuotaCrest$xCuotaCrest.Close)
xCuotaColgate <- to.weekly(xCuotaColgate)
zCuotaColgate <- as.zoo(xCuotaColgate$xCuotaColgate.Close)
names(zCuotaCrest) <- 'CuotaMercado'
names(zCuotaColgate) <- 'CuotaMercado'
#Primera aproximacion
autoplot(zCuotaCrest) + geom_point() +
ylab("Ventas")+ggtitle("Cuota semanal Crest")+xlab("Semanas") +
ggtitle('Representacion Crest')
autoplot(zCuotaColgate) + geom_point() +
ylab("Ventas") + ggtitle("Cuota semanal Colgate") + xlab("Semanas") +
ggtitle('Representacion Colgate')
#Select number of observation to compare forecast
#Quitamos 16 semanas de 1963
cOmit = 16
#Data Size
nObs = length(zCuotaCrest)
#sub_sample
#oVentasCrest=zCuotaCrest[1:(nObs-cOmit),]
oVentasCrest <- window(zCuotaCrest, start = index(zCuotaCrest[1]), end = index(zCuotaCrest[nObs - cOmit]))
oVentasColgate <- window(zCuotaColgate, start = index(zCuotaColgate[1]), end = index(zCuotaColgate[nObs - cOmit]))
#ARIMA MODEL
fit1 = auto.arima(oVentasCrest)
summary(fit1)
fit2 = auto.arima(oVentasCrest, lambda = 0)
summary(fit2)
fit3 = auto.arima(oVentasCrest, lambda = 0, approximation = F, stepwise = F)
summary(fit3)
#el mejor modelo es un 011 sin estacionalidad
#auto arima no da estacionalidad, tenemos que ponerla nosotros
#Se debe al tipo de modelo de negocio. Una electrica por ejemplo depende mucho del mes en el que estemos
#El consumo de pasta no va a cambiar durante las epocas del año, por tanto al no tener estaciones no hay estacionalidad
#Ese comonente habria que agregarlo en la funcion arima no en la auto arima.
arima.crest = auto.arima(oVentasCrest)
summary(arima.crest)
arima.colgate <- auto.arima(oVentasColgate)
summary(arima.colgate)
#Podemos usar coredata para que ignore el indice en un objeto Zoo
#cuando hay estacionalidad hay que incluir un period
arimabueno = arima(oVentasCrest, order = c(0,1,1))
#residual analysis
ggtsdisplay(arima.crest$residuals)
ggtsdisplay(arima.colgate$residuals)
Box.test(arima.crest$residuals,lag = 3, fitdf = 1, type = "Lj")
Box.test(arima.colgate$residuals,lag = 3, fitdf = 1, type = "Lj")
fventas.crest = forecast(arima.crest, h = 16)
plot(fventas.crest)
fventas.colgate = forecast(arima.colgate, h = 16)
plot(fventas.colgate)
detectAO(arima.crest) #Outlier en 135/136/138
detectIO(arima.crest) #Nada
checkresiduals(arima.crest)
detectAO(arima.colgate)
detectIO(arima.colgate)
checkresiduals(arima.colgate)
crest.arimax = arimax(oVentasCrest, order = c(0, 1, 1),
xtransf = data.frame(primero = 1*(seq(oVentasCrest) >= 135)),
xreg = data.frame(error136 = 1*(seq(oVentasCrest) == 136),
error138 = 1*(seq(oVentasCrest) == 138)),
transfer = list(c(0,0)),
method = 'ML')#Maxima verosimilitud
colgate.arimax = arimax(oVentasColgate, order = c(0, 1, 1),
xtransf = data.frame(first = 1*(seq(oVentasColgate) >= 135)
),
transfer = list(c(0,0)),
method = 'ML')#Maxima verosimilitud
coeftest(crest.arimax)
coeftest(colgate.arimax)
library(astsa)
library(Hmisc)
crest_134 <- window(cuotaCrest, end=134) #ventas, nos quedamos con los 134 primeros porque a partir del 135 la cosa cambia
colgate_134 <- window(cuotaColgate, end=134) #lead es publicidad, 140 primeros
crest_134_D <- diff(crest_134) # para hacerlas estacionarias usamos diff
colgate_134_D <- diff(colgate_134) # quitarle la media es indiferente, con usar diff sobra
library(dynlm)
mod0 <- arimax(colgate_134_D,
order=c(0,1,1),
include.mean=TRUE,
xtransf=crest_134_D,
transfer=list(c(0,15)), #funcion de transferencia con orden 15 numerador
method="ML")
coeftest(mod0)
mod0
summary(mod0)
tsdisplay(mod0$residuals) # no es ruido blanco, falta algo en el modelo
plot(mod0$coef[2:15], type = 'h', main = "Efecto de los 15 retardos")
mod <- arimax(colgate_134_D, #MODELO DE FUNCION DE TRANSFERENCIA que incluye la relacion dinamica de x e y, donde la x es el impulso
order=c(0,1,1), #media movil 1
include.mean=TRUE, #la constante
fixed=c(NA,NA,0,0,NA),
xtransf=crest_134_D,
transfer=list(c(1,2)), #el 1 se debe a polinomio 1 denominador, polinomio 3 numerador
method="ML")
tsdisplay(mod$residuals)
plot(mod$coef[2:15], type = 'h', main = "Efecto de los 15 retardos")
library(astsa)
library(Hmisc)
crest_134 <- window(cuotaCrest, end=134) #ventas, nos quedamos con los 134 primeros porque a partir del 135 la cosa cambia
colgate_134 <- window(cuotaColgate, end=134) #lead es publicidad, 140 primeros
crest_134_D <- diff(crest_134) # para hacerlas estacionarias usamos diff
colgate_134_D <- diff(colgate_134) # quitarle la media es indiferente, con usar diff sobra
library(dynlm)
mod0 <- arimax(colgate_134_D,
order=c(0,1,1),
include.mean=TRUE,
xtransf=crest_134_D,
transfer=list(c(0,15)), #funcion de transferencia con orden 15 numerador
method="ML")
coeftest(mod0)
mod0
summary(mod0)
library(openxlsx)
library(forecast)
library(xts)
library(ggplot2)
library(ggfortify) #Plot Monthplot
library(TSA)
library(lmtest)
library(astsa)
library(Hmisc)
set.seed(123)
datosCompletos <- read.xlsx('data.xlsx', colNames = T)
str(datosCompletos)
## Análisis Exploratorio de Datos ##
#Dado que el fichero inicial no tiene NA's los demás tampoco los tendrán
sum(is.na(datosCompletos))
#Todas son variables de tipo numerico
#Tendremos que trabajar la columna de la fecha y las semanas
cuotaCrest <- datosCompletos$Crest
cuotaColgate <- datosCompletos$Colgate
generateDate <- seq(as.Date('1958/01/08'), as.Date('1963/04/23'), by = 'week')
xCuotaCrest <- xts(cuotaCrest, order.by = generateDate)
xCuotaColgate <- xts(cuotaColgate, order.by = generateDate)
#Vamos a pasarlo a trimestre para operar mejor
xCuotaCrest <- to.weekly(xCuotaCrest)
zCuotaCrest <- as.zoo(xCuotaCrest$xCuotaCrest.Close)
xCuotaColgate <- to.weekly(xCuotaColgate)
zCuotaColgate <- as.zoo(xCuotaColgate$xCuotaColgate.Close)
names(zCuotaCrest) <- 'CuotaMercado'
names(zCuotaColgate) <- 'CuotaMercado'
#Primera aproximacion
autoplot(zCuotaCrest) + geom_point() +
ylab("Ventas")+ggtitle("Cuota semanal Crest")+xlab("Semanas") +
ggtitle('Representacion Crest')
autoplot(zCuotaColgate) + geom_point() +
ylab("Ventas") + ggtitle("Cuota semanal Colgate") + xlab("Semanas") +
ggtitle('Representacion Colgate')
#Select number of observation to compare forecast
#Quitamos 16 semanas de 1963
cOmit = 16
#Data Size
nObs = length(zCuotaCrest)
#sub_sample
#oVentasCrest=zCuotaCrest[1:(nObs-cOmit),]
oVentasCrest <- window(zCuotaCrest, start = index(zCuotaCrest[1]), end = index(zCuotaCrest[nObs - cOmit]))
oVentasColgate <- window(zCuotaColgate, start = index(zCuotaColgate[1]), end = index(zCuotaColgate[nObs - cOmit]))
#ARIMA MODEL
fit1 = auto.arima(oVentasCrest)
summary(fit1)
fit2 = auto.arima(oVentasCrest, lambda = 0)
summary(fit2)
fit3 = auto.arima(oVentasCrest, lambda = 0, approximation = F, stepwise = F)
summary(fit3)
#el mejor modelo es un 011 sin estacionalidad
#auto arima no da estacionalidad, tenemos que ponerla nosotros
#Se debe al tipo de modelo de negocio. Una electrica por ejemplo depende mucho del mes en el que estemos
#El consumo de pasta no va a cambiar durante las epocas del año, por tanto al no tener estaciones no hay estacionalidad
#Ese comonente habria que agregarlo en la funcion arima no en la auto arima.
arima.crest = auto.arima(oVentasCrest)
summary(arima.crest)
arima.colgate <- auto.arima(oVentasColgate)
summary(arima.colgate)
#Podemos usar coredata para que ignore el indice en un objeto Zoo
#cuando hay estacionalidad hay que incluir un period
arimabueno = arima(oVentasCrest, order = c(0,1,1))
#Primera aproximacion
autoplot(zCuotaCrest) + geom_point() +
ylab("Ventas")+ggtitle("Cuota semanal Crest")+xlab("Semanas") +
ggtitle('Representacion Crest')
autoplot(zCuotaColgate) + geom_point() +
ylab("Ventas") + ggtitle("Cuota semanal Colgate") + xlab("Semanas") +
ggtitle('Representacion Colgate')
#Select number of observation to compare forecast
#Quitamos 16 semanas de 1963
cOmit = 16
#Data Size
nObs = length(zCuotaCrest)
#sub_sample
#oVentasCrest=zCuotaCrest[1:(nObs-cOmit),]
oVentasCrest <- window(zCuotaCrest, start = index(zCuotaCrest[1]), end = index(zCuotaCrest[nObs - cOmit]))
oVentasColgate <- window(zCuotaColgate, start = index(zCuotaColgate[1]), end = index(zCuotaColgate[nObs - cOmit]))
#ARIMA MODEL
fit1 = auto.arima(oVentasCrest)
summary(fit1)
fit2 = auto.arima(oVentasCrest, lambda = 0)
summary(fit2)
fit3 = auto.arima(oVentasCrest, lambda = 0, approximation = F, stepwise = F)
summary(fit3)
fit4= auto.arima(oVentasCrest, ic = ic, traze = TRUE)
fit4= auto.arima(oVentasCrest, ic = 'ic', traze = TRUE)
fit4= auto.arima(oVentasCrest, ic = 'AIC', traze = TRUE)
summary(fit4)
#ARIMA MODEL
fit1 = auto.arima(oVentasCrest)
summary(fit1)
fit2 = auto.arima(oVentasCrest, lambda = 0)
summary(fit2)
fit3 = auto.arima(oVentasCrest, lambda = 0, approximation = F, stepwise = F)
summary(fit3)
fit4 = auto.arima(oVentasCrest, ic = 'aic', trace = T)
summary(fit4)
#ARIMA MODEL
fit1 = auto.arima(oVentasCrest)
fit2 = auto.arima(oVentasCrest, lambda = 0)
fit3 = auto.arima(oVentasCrest, lambda = 0, approximation = F, stepwise = F)
fit4 = auto.arima(oVentasCrest, ic = 'aic', trace = T)
summary(fit4)
#ARIMA MODEL
fit1 = auto.arima(oVentasCrest)
fit2 = auto.arima(oVentasCrest, lambda = 0)
fit3 = auto.arima(oVentasCrest, lambda = 0, approximation = F, stepwise = F)
fit4 = auto.arima(oVentasCrest, ic = 'aic', trace = T)
summary(fit4)
#ARIMA MODEL
fit1 = auto.arima(oVentasCrest)
fit2 = auto.arima(oVentasCrest, lambda = 0)
fit3 = auto.arima(oVentasCrest, lambda = 0, approximation = F, stepwise = F)
fit4 = auto.arima(oVentasCrest, ic = 'aic', trace = T)
summary(fit4)
#residual analysis
ggtsdisplay(arima.crest$residuals)
ggtsdisplay(arima.colgate$residuals)
Box.test(arima.crest$residuals,lag = 3, fitdf = 1, type = "Lj")
Box.test(arima.colgate$residuals,lag = 3, fitdf = 1, type = "Lj")
fventas.crest = forecast(arima.crest, h = 16)
plot(fventas.crest)
fventas.colgate = forecast(arima.colgate, h = 16)
plot(fventas.colgate)
detectAO(arima.crest) #Outlier en 135/136/138
detectIO(arima.crest) #Nada
checkresiduals(arima.crest)
detectAO(arima.colgate)
detectIO(arima.colgate)
checkresiduals(arima.colgate)
detectAO(arima.crest) #Outlier en 135/136/138
detectIO(arima.crest) #Nada
checkresiduals(arima.crest)
detectAO(arima.colgate)
detectIO(arima.colgate)
checkresiduals(arima.colgate)
crest.arimax = arimax(oVentasCrest, order = c(0, 1, 1),
xtransf = data.frame(primero = 1*(seq(oVentasCrest) >= 135)),
xreg = data.frame(error136 = 1*(seq(oVentasCrest) == 136),
error138 = 1*(seq(oVentasCrest) == 138)),
transfer = list(c(0,0)),
method = 'ML')#Maxima verosimilitud
colgate.arimax = arimax(oVentasColgate, order = c(0, 1, 1),
xtransf = data.frame(first = 1*(seq(oVentasColgate) >= 135)
),
transfer = list(c(0,0)),
method = 'ML')#Maxima verosimilitud
coeftest(crest.arimax)
coeftest(colgate.arimax)
detectAO(arima.crest) #Outlier en 135/136/138
detectIO(arima.crest) #Nada
checkresiduals(arima.crest)
detectAO(arima.colgate)
detectIO(arima.colgate)
checkresiduals(arima.colgate)
library(astsa)
library(Hmisc)
crest_134 <- window(cuotaCrest, end=134) #ventas, nos quedamos con los 134 primeros porque a partir del 135 la cosa cambia
colgate_134 <- window(cuotaColgate, end=134) #lead es publicidad, 140 primeros
crest_134_D <- diff(crest_134) # para hacerlas estacionarias usamos diff
colgate_134_D <- diff(colgate_134) # quitarle la media es indiferente, con usar diff sobra
library(dynlm)
library(astsa)
library(Hmisc)
crest_134 <- window(cuotaCrest, end=134) #ventas, nos quedamos con los 134 primeros porque a partir del 135 la cosa cambia
colgate_134 <- window(cuotaColgate, end=134) #lead es publicidad, 140 primeros
crest_134_D <- diff(crest_134) # para hacerlas estacionarias usamos diff
colgate_134_D <- diff(colgate_134) # quitarle la media es indiferente, con usar diff sobra
library(dynlm)
mod0 <- arimax(colgate_134_D,
order=c(0,1,1),
include.mean=TRUE,
xtransf=crest_134_D,
transfer=list(c(0,15)), #funcion de transferencia con orden 15 numerador
method="ML")
coeftest(mod0)
mod0
summary(mod0)
mod0 <- arimax(colgate_134_D,
order=c(0,1,1),
include.mean=TRUE,
xtransf=crest_134_D,
transfer=list(c(0,15)), #funcion de transferencia con orden 15 numerador
method="ML")
coeftest(mod0)
mod0
summary(mod0)
mod0 <- arimax(colgate_134_D,
order=c(0,1,1),
include.mean=TRUE,
xtransf=crest_134_D,
transfer=list(c(0,15)), #funcion de transferencia con orden 15 numerador
method="ML")
coeftest(mod0)
mod0
summary(mod0)
MOD
mod
library(openxlsx)
library(forecast)
library(xts)
library(ggplot2)
library(ggfortify) #Plot Monthplot
library(TSA)
library(lmtest)
library(astsa)
library(Hmisc)
set.seed(123)
datosCompletos <- read.xlsx('data.xlsx', colNames = T)
str(datosCompletos)
## Análisis Exploratorio de Datos ##
#Dado que el fichero inicial no tiene NA's los demás tampoco los tendrán
sum(is.na(datosCompletos))
#Todas son variables de tipo numerico
#Tendremos que trabajar la columna de la fecha y las semanas
cuotaCrest <- datosCompletos$Crest
cuotaColgate <- datosCompletos$Colgate
generateDate <- seq(as.Date('1958/01/08'), as.Date('1963/04/23'), by = 'week')
xCuotaCrest <- xts(cuotaCrest, order.by = generateDate)
xCuotaColgate <- xts(cuotaColgate, order.by = generateDate)
#Vamos a pasarlo a trimestre para operar mejor
xCuotaCrest <- to.weekly(xCuotaCrest)
zCuotaCrest <- as.zoo(xCuotaCrest$xCuotaCrest.Close)
xCuotaColgate <- to.weekly(xCuotaColgate)
zCuotaColgate <- as.zoo(xCuotaColgate$xCuotaColgate.Close)
names(zCuotaCrest) <- 'CuotaMercado'
names(zCuotaColgate) <- 'CuotaMercado'
