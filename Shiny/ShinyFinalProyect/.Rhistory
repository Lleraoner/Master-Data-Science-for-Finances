shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
randomX <- as.data.frame(rnorm(300))
randomY <- as.data.frame(rnorm(300))
dataframe <- cbind(randomX, randomY)
names(dataframe) <- c('ejeX', 'ejeY')
ggplot(dataframe) + geom_point(aes(ejeX, ejeY))
randomX <- as.data.frame(rnorm(300))
randomY <- as.data.frame(rnorm(300))
dataframe <- cbind(randomX, randomY)
names(dataframe) <- c('ejeX', 'ejeY')
ggplot(dataframe) + geom_point(aes(ejeX, ejeY))
cor(dataframe)
cor(dataframe$ejeX, dataframe$ejeY)
randomX <- as.data.frame(rnorm(300))
randomY <- as.data.frame(rnorm(300))
dataframe <- cbind(randomX, randomY)
names(dataframe) <- c('ejeX', 'ejeY')
ggplot(dataframe) + geom_point(aes(ejeX, ejeY))
cor(dataframe$ejeX, dataframe$ejeY)
randomX <- as.data.frame(rnorm(300))
randomY <- as.data.frame(rnorm(300))
dataframe <- cbind(randomX, randomY)
names(dataframe) <- c('ejeX', 'ejeY')
ggplot(dataframe) + geom_point(aes(ejeX, ejeY))
cor(dataframe$ejeX, dataframe$ejeY)
randomX <- as.data.frame(rnorm(300))
randomY <- as.data.frame(rnorm(300))
dataframe <- cbind(randomX, randomY)
names(dataframe) <- c('ejeX', 'ejeY')
ggplot(dataframe) + geom_point(aes(ejeX, ejeY))
cor(dataframe$ejeX, dataframe$ejeY)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
points <- list(x=vector("numeric", 0), y=vector("numeric", 0))
View(points)
View(points)
points <- as.data.frame(points)
View(points)
View(points)
points <- list(x=vector("numeric", 0), y=vector("numeric", 0))
points$x <<- c(points$x, 5)
points$y <<- c(points$y, 6)
points <- list(x=vector("numeric", 0), y=vector("numeric", 0))
points$x <- c(points$x, 5)
points$y <- c(points$y, 6)
points <- as.data.frame(points)
View(points)
View(points)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
points$x <- c(points$x, 5)
points$y <- c(points$y, 6)
points <- list(x=vector("numeric", 0), y=vector("numeric", 0))
points$x <- c(points$x, 5)
points$y <- c(points$y, 6)
points$x <- c(points$x, 5)
points$y <- c(points$y, 6)
View(points)
View(points)
points$x <- c(points$x, 5)
points$y <- c(points$y, 6)
points$x <- c(points$x, 5)
points$y <- c(points$y, 6)
points <- as.data.frame(points)
View(points)
View(points)
points$x <- 0
points$y <- 0
View(points)
View(points)
runApp()
runApp()
points <- as.data.frame(points)
points$x <- NULL
points$y <- NULL
View(points)
View(points)
runApp()
points <- list(x=vector("numeric", 0), y=vector("numeric", 0))
points$y <- c(points$y, 6)
points$x <- c(points$x, 5)
points <- list(x=vector("numeric", 0), y=vector("numeric", 0))
points$x <- c(points$x, 5)
points$x <- c(points$x, 5)
points$y <- c(points$y, 6)
points$x <- c(points$x, 5)
points$y <- c(points$y, 6)
points$x <- c(points$x, 5)
points$y <- c(points$y, 6)
points <- as.data.frame(points)
points <- as.data.frame(points)
points <- list(x=vector("numeric", 0), y=vector("numeric", 0))
points$x <- c(points$x, 5)
points$y <- c(points$y, 6)
points <- as.data.frame(points)
points <- points[0,]
View(points)
View(points)
runApp()
runApp()
runApp()
runApp()
runApp()
points <- list(x=vector("numeric", 0), y=vector("numeric", 0))
points$x <- c(points$x, 5)
points$y <- c(points$y, 6)
points$x <- c(points$x, 5)
points$y <- c(points$y, 6)
points$x <- c(points$x, 5)
points$y <- c(points$y, 6)
points$x <- c(points$x, 5)
points$y <- c(points$y, 6)
points <- as.data.frame(points)
points <- points[1,]
points$x <- c(points$x, 0)
points$x <- 0
points$y <- 0
View(points)
View(points)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
randomX <- as.data.frame(rnorm(300))
randomY <- as.data.frame(rnorm(300))
dataframe <- cbind(randomX, randomY)
medX <- median(dataframe[1])
medY <- median(dataframe[2])
medX <- median(dataframe[,1])
medY <- median(dataframe[,2])
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
randomX <- as.data.frame(rnorm(300))
randomY <- as.data.frame(rnorm(300))
dataframe <- cbind(randomX, randomY)
names(dataframe) <- c('ejeX', 'ejeY')
ggplot(dataframe) + geom_point(aes(ejeX, ejeY))
cor(dataframe$ejeX, dataframe$ejeY)
points <- list(x=vector("numeric", 0), y=vector("numeric", 0))
points$x <- c(points$x, 5)
points$y <- c(points$y, 6)
points <- as.data.frame(points)
points <- points[1,]
points$x <- 0
points$y <- 0
pint
medX <- median(dataframe[,1])
medY <- median(dataframe[,2])
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shinyUI(
dashboardPage(
dashboardHeader(title = h4('Guess The Correlation')),
dashboardSidebar(
sidebarMenu(
#Cuidado con los tabname
menuItem('Introducction', tabName = 'image', icon = icon('camera-retro')),
menuItem('Guess the correlation', tabName = 'guess', icon = icon('chart-bar')),
menuItem('Paint the correlation', tabName = 'paint', icon = icon('chart-bar')),
#menuItem('Change the correlation', tabName = 'change', icon = icon('chart-bar')),
menuItem('Guess the median', tabName = 'median', icon = icon('chart-bar'))
#menuItem('Conclusion And References', tabName = 'referencias', icon= icon('chart-bar'))
)
),
dashboardBody(tabItems(
tabItem(tabName = 'image', align = 'center',
mainPanel(style="text-align: center;",
h1('Shiny Final Proyect'),
h4('Game Guess The correlation'),
h2("What is this game"),
p("In probability theory, the birthday problem or birthday paradox concerns the probability that,"),
p("in a set of n randomly chosen people, some pair of them will have the same birthday.By the pigeonhole principle,"),
p("the probability reaches 100% when the number of people reaches 366 (since there are only 365 possible birthdays."),
p("However, 99.9% probability is reached with just 70 people, and 50% probability with 23 people."),
p("These conclusions are based on the assumption that each day of the year is equally probable for a birthday."),
p("The history of the problem is obscure. W. W. Rouse Ball indicated that it was first discussed by Harold Davenport.")
)
),
tabItem(tabName = 'guess',
h2('Correlation Chart'),
plotOutput('modelo'),
uiOutput('guesscorrelation')),
tabItem(tabName = 'paint',
h2('Paint the correlation Chart'),
plotOutput('modelopintado', click = 'paintclick'),
uiOutput('paintmodel')),
# el de change no se lo que hay que ahcer solo se que hay un boton que te he puesto en el server
tabItem(tabName = 'change',
h2('Change Chart'),
box(plotOutput('modelocambiado')),
box(
h2('Game change the Correlation'),
br(),
h3("Selecciona la correlacion correcta")
),
uiOutput('cambiomodelo')),
tabItem(tabName = 'median',
h2('Guess the median'),
plotOutput('graficomediana'),
uiOutput('compruebamediana'))
)
))
)
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
